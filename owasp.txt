top 10 java defenses for website security

jim manico

owasp voulteer:

owasp cheat-sheet

1.query parametized;

antomy of a sql

anatomy of a sql injection Attack;

query parameterization in java:

string name = request.getParameter("newName");
string id = request.getParameter("id");

preparedStatement pstmr = con.preparedstatement("update employees set 
name=? where id= ?");
pstmt.setStringO( 1 , newName);
pstmt.setString( 2, id);


2. password storage:

store password based on need:

use a  salt( de-duplication)
SCRYPT/PBKDF2(slow, peroformance hit,easy)
HMAC(require good key storage, tough)

1.do not limit the type of characters or length of user password

2.use a cryptographically strong credentials-sepcific salt
    protect([salt]+[password]);
use a 32 char or 64 char salt
do not depend on hiding,spitting

3aa) impose difficult verification on the attack(strong/fast)

 HMAC-SHA-256[(private key],[salt]+[password])

3b) impose difficult verification on attack and defender

PBKDF 2 when  FIPS certification
scrypt where resisting any/all hardware

XSS defense cross site scripting:

no third party libraries
more complete api


html contexts
xml contexts	

web page built in java JSP is a vulnerable to XSS:

solution:

1)
<input type="text" name="data" value="<%= Encode.forHthmlAttribute(datavalue)%"/>

2)
<textarea name="text"><%= Encode.forHtmlContect(textValue) %"/>

3)
<button
onclick="alert('<%= Encode.forJavascriptAttribute(alertMsg) %>');
click me
</button>

4)
<script type="text/javascript">
var msg="<%= Encode.forJavascriptBlock(message) %>";
alert*msg);
</script>


html sanitization

code goole owasp java html sanitization